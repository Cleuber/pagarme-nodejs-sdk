/**
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  dict,
  lazy,
  literal,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { getAntifraudResponseSchema } from './getAntifraudResponse';
import { getFineResponseSchema } from './getFineResponse';
import { getGatewayResponseResponseSchema } from './getGatewayResponseResponse';
import { getInterestResponseSchema } from './getInterestResponse';
import { getSplitResponseSchema } from './getSplitResponse';
import { GetTransactionResponse } from './getTransactionResponse';

/** Response object for getting a cash transaction */
export interface GetCashTransactionResponse extends GetTransactionResponse {
  /** Description */
  description: string | null;
}

export const getCashTransactionResponseSchema: Schema<any> = object({
  description: ['description', nullable(string())],
  gatewayId: ['gateway_id', nullable(string())],
  amount: ['amount', nullable(number())],
  status: ['status', nullable(string())],
  success: ['success', nullable(boolean())],
  createdAt: ['created_at', nullable(string())],
  updatedAt: ['updated_at', nullable(string())],
  attemptCount: ['attempt_count', nullable(number())],
  maxAttempts: ['max_attempts', nullable(number())],
  splits: ['splits', nullable(array(lazy(() => getSplitResponseSchema)))],
  nextAttempt: ['next_attempt', optional(nullable(string()))],
  id: ['id', nullable(string())],
  gatewayResponse: [
    'gateway_response',
    nullable(lazy(() => getGatewayResponseResponseSchema)),
  ],
  antifraudResponse: [
    'antifraud_response',
    nullable(lazy(() => getAntifraudResponseSchema)),
  ],
  metadata: ['metadata', optional(nullable(dict(string())))],
  split: ['split', nullable(array(lazy(() => getSplitResponseSchema)))],
  interest: [
    'interest',
    optional(nullable(lazy(() => getInterestResponseSchema))),
  ],
  fine: ['fine', optional(nullable(lazy(() => getFineResponseSchema)))],
  maxDaysToPayPastDue: [
    'max_days_to_pay_past_due',
    optional(nullable(number())),
  ],
  transactionType: ['transaction_type', optional(literal('cash'))],
});
